<%pre>
#include <czmq.h>

#include "asset_msg.h"
#include "data.h"
</%pre>
<%thread scope="global">
asset_manager asset_mgr;
</%thread>
<%cpp>
    // Check URL validity
    std::string id;
    if((id = request.getArg("id")).empty()) {
</%cpp>
{ "error":"invalid_url" }
<%cpp>
        return HTTP_BAD_REQUEST;
    }

    // Get data
    asset_msg_t *dta = asset_mgr.get_item(request.getArg("type"), id);

    if(dta == NULL) {
</%cpp>
{ "error":"item_not_found" }
<%cpp>
        return HTTP_NOT_FOUND;
    }

    // Prepare the reply
    char buff[16];
</%cpp>
{
    "id":"<$ id $>",
<%cpp>
    zhash_t *ext = asset_msg_ext(dta);
    int ext_count = 0;
    if(ext != NULL) {
        ext_count = zhash_size(ext);
    }
    sprintf(buff, "%d", asset_msg_location(dta));
    if((asset_msg_location(dta) != 0) && 
       (asset_msg_location_type(dta) != asset_type::UNKNOWN)) {
</%cpp>
    "name":"<$ asset_msg_name(dta) $>",
    "location":"<$ "/api/v1/asset/" +
                   asset_mgr.byte_to_type(asset_msg_location_type(dta)) + "/" +
                   buff $>"<? ext_count > 0 ? "," ?>
%   } else {
    "name":"<$ asset_msg_name(dta) $>"<? ext_count > 0 ? "," ?>
<%cpp>
    }
    if(ext_count > 0 ) {
</%cpp>
    "ext" : {
<%cpp>
        int i =0;
        void *it;
        for(i = 1, it = zhash_first(ext); it != 0;
            i++,   it = zhash_next(ext) ) {
</%cpp>
        "<$ (char*)zhash_cursor(ext) $>":"<$ (char*)it $>"<? i != ext_count ? "," ?>
%       }
    }
%   }
}
%   asset_msg_destroy(&dta);
