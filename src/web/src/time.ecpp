<%pre>
#include <iostream>
#include <sstream>
#include <cxxtools/regex.h>
#include <cxxtools/jsondeserializer.h>
</%pre>
<%cpp>
    if(!request.isMethodGET()) {
</%cpp>
<%cpp>
		std::stringstream input(request.getBody(), std::ios_base::in);
		cxxtools::SerializationInfo si;
		cxxtools::JsonDeserializer deserializer(input);
		std::string time;
		try {
			deserializer.deserialize(si);
			si.getMember("time") >>= time;
		} catch (const std::exception& e) {
			time = "";
		}

	    static cxxtools::Regex regex("^[1-9][0-9][0-9][0-9]-[01][0-9]-[0-3][0-9]T[0-2][0-9]:[0-6][0-9]:[0-6][0-9]Z$");

		printf("\n%s\n", time.c_str());

	    if(!regex.match(time) ||
	        system((std::string("sudo date -s ") + time).c_str()) != 0) {
</%cpp>
{ "error":"invalid_format" }
<%cpp>
		    return HTTP_BAD_REQUEST;
	    }
    }

    time_t tme = time(NULL);
    struct tm tm_s;
    gmtime_r(&tme, &tm_s);
    char buff[32];
    strftime(buff, 32, "%FT%TZ", &tm_s);
</%cpp>
{ "time" : "<$ buff $>" }
