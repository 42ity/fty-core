<%pre>
#include <subprocess.h>
#include <cxxtools/split.h>
#include <vector>
#include <string>

using namespace shared;

std::string real_out(std::string in, bool key_value = true) {
    std::vector<std::string> spl;
    printf("%s\n", in.c_str());
    cxxtools::split("\n", in, std::back_inserter(spl));
    if(spl.size() != 3)
        return "";
    auto pos = spl[1].find_first_of("=");
    if(pos == std::string::npos) {
        if(key_value)
            return "";
        return spl[1];
    }
    return spl[1].substr(pos + 2);
}

</%pre>
<%thread scope="global">
// TODO: Figure out how to make it work without -e
Argv exe = { "augtool", "-e" };
SubProcess augtool(exe, SubProcess::STDOUT_PIPE | SubProcess::STDIN_PIPE);
</%thread>
<%cpp>
std::string command;
std::string nil;
std::string iface = request.getArg("iface");
augtool.run();
command = "help\n";
write(augtool.getStdin(), command.c_str(), command.length());
nil = wait_read_all(augtool.getStdout());
if(!augtool.isRunning()) {
</%cpp>
{ "error": "Can't start augtool" }
<%cpp>
}
std::string address;
command = "match /files/etc/network/interfaces/iface[*] " + iface + "\n";
write(augtool.getStdin(), command.c_str(), command.length());
address = real_out(wait_read_all(augtool.getStdout()), false);
if(address.empty()) {
</%cpp>
{ "error": "No configuration for interface <$ iface $> found" }
<%cpp>
    return HTTP_NOT_FOUND;
}
if(request.getMethod() == "GET") {
    std::string method, ip, netmask, gateway;
    command = "get " + address + "/method\n";
    write(augtool.getStdin(), command.c_str(), command.length());
    method = real_out(wait_read_all(augtool.getStdout()));
    command = "get " + address + "/address\n";
    write(augtool.getStdin(), command.c_str(), command.length());
    ip = real_out(wait_read_all(augtool.getStdout()));
    command = "get " + address + "/netmask\n";
    write(augtool.getStdin(), command.c_str(), command.length());
    netmask = real_out(wait_read_all(augtool.getStdout()));
    command = "get " + address + "/gateway\n";
    write(augtool.getStdin(), command.c_str(), command.length());
    gateway = real_out(wait_read_all(augtool.getStdout()));
</%cpp>
{ "<$ iface $>":
    {
        "method": "<$ method $>"
% if(!ip.empty()) {
      , "address": "<$ ip $>"
% }
% if(!netmask.empty()) {
      , "netmask": "<$ netmask $>"
% }
% if(!gateway.empty()) {
      , "gateway": "<$ gateway $>"
% }
    }
}
<%cpp>
} else {
</%cpp>
{ "error": "Not implemented yet" }
% }
