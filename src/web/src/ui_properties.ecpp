<%pre>
#include <string>
#include <cxxtools/jsondeserializer.h>

#include "data.h"
</%pre>
<%thread scope="global">
ui_props_manager mgr;
</%thread>
<%cpp>
    std::string method = request.getMethod();

    if ( method == "GET") {

        std::string res;
        int rv = mgr.get(res);
        if ( rv != 0 ) {
</%cpp>
{
    "error" : "<$$ res $>"
}
<%cpp>
            return HTTP_INTERNAL_SERVER_ERROR;
        }
</%cpp>
<$$ res $>
<%cpp>

    }
    else if ( method == "PUT") {

        std::stringstream input(request.getBody(), std::ios_base::in);
        cxxtools::SerializationInfo si;
        cxxtools::JsonDeserializer deserializer(input);

//FIXME: this does not work
        try {
            deserializer.deserialize(si);
        } catch (const std::exception& e) {
</%cpp>
{
  "error" : "invalid JSON content",
  "what" : "<$$ e.what() $>",
  "content" : "<$$ request.getBody() $>"
}
<%cpp>
        return HTTP_BAD_REQUEST;
        }
        std::string errmsg = "";
        int rv = mgr.put(request.getBody(), errmsg);
        if ( rv != 0 ) {
</%cpp>
{
    "error" : "<$$ errmsg $>"
}
<%cpp>
            return HTTP_INTERNAL_SERVER_ERROR;
        }
    }
    else {
</%cpp>
{
    "error" : "invalid request method"
}
<%cpp>
        return HTTP_METHOD_NOT_ALLOWED;
    }
</%cpp>
