<%pre>
#include <cxxtools/split.h>
#include <cxxtools/jsondeserializer.h>
#include <cxxtools/regex.h>
#include <vector>
#include <string>
#include <string.h>

#include "subprocess.h"
#include "cidr.h"

using namespace shared;

</%pre>
<%thread scope="global">
// TODO: Figure out how to make it work without -e
Argv exe = { "sudo", "augtool", "-e" };
SubProcess augtool(exe, SubProcess::STDOUT_PIPE | SubProcess::STDIN_PIPE);
</%thread>
<%cpp>
std::string command;
std::string nil;

// Initialization of augtool subprocess if needed
if(!augtool.isRunning()) {
    augtool.run();
    command = "help\n";
    write(augtool.getStdin(), command.c_str(), command.length());
    nil = wait_read_all(augtool.getStdout());
    if(!augtool.isRunning() || nil.find("match") == nil.npos) {
</%cpp>
{ "error": "Can't start augtool" }
<%cpp>
        return HTTP_INTERNAL_SERVER_ERROR;
    }
}

// Make sure we have clear state and fresh data
command = "\n";
write(augtool.getStdin(), command.c_str(), command.length());
nil = wait_read_all(augtool.getStdout());
command = "load\n";
write(augtool.getStdin(), command.c_str(), command.length());
nil = wait_read_all(augtool.getStdout());

return DECLINED;
</%cpp>
