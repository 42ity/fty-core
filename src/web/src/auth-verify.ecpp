<%pre>
#include "tokens.h"
#include <tnt/httpmessage.h>
#include <tnt/httpheader.h>
</%pre>
<%args>
std::string access_token="";
</%args>
<%request scope="global">
int access_auth_level;
</%request>
<%cpp>
access_auth_level=0;
if(request.hasHeader(tnt::httpheader::authorization)) {
	access_token = request.getHeader(tnt::httpheader::authorization);
	if(access_token.compare(0,7,"Bearer ")) {
		access_token = "";
	} else {
		access_token = access_token.substr(7);
	}

	if(access_token.empty()) {
		/* Token header was presented but empty */
		access_auth_level=-1;
	} else {
		access_auth_level=1;
		if(!tokens::get_instance()->verify_token(access_token)) {
//			"error":"invalid_token"
//			return HTTP_UNAUTHORIZED;
			access_auth_level=-2;
//	 	} else {
//???//			return DECLINED;
//			access_auth_level=-3;
		}
	}
}
char buff[16];
sprintf(buff, "%i", access_auth_level);
buff[15]='\0';
reply.setHeader( (std::string)"X-Auth: ",
    (std::string)"access_auth_level=\"" + buff + "\"");
</%cpp>
