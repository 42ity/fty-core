<%pre>
#include "tokens.h"
#include <tnt/httpmessage.h>
#include <tnt/httpheader.h>
</%pre>
<%args>
std::string access_token="";
</%args>
<%cpp>
if(request.hasHeader(tnt::httpheader::authorization)) {
	access_token = request.getHeader(tnt::httpheader::authorization);
	if(access_token.compare(0,7,"Bearer ")) {
		access_token = "";
	} else {
		access_token = access_token.substr(7);
	}
}
if(access_token.empty()) {
	reply.setHeader(tnt::httpheader::wwwAuthenticate, "Bearer realm=\"bios\"");
	reply.setContentType("text/html;charset=UTF-8");
</%cpp>
<html><body><h1>Not authorized, <a href="/api/1.0/token">get token</a> first!</h1></body></html>
<%cpp>
	return HTTP_UNAUTHORIZED;
} else if(!tokens::get_instance()->verify_token(access_token)) {
reply.setHeader(tnt::httpheader::wwwAuthenticate, "Bearer realm=\"bios\"");
</%cpp>
{
    "error":"invalid_token"
}
% return HTTP_UNAUTHORIZED;
% } else {
% return DECLINED;
% }
