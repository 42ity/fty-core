<#
 #
 # Copyright (C) 2015 Eaton
 #
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 2 of the License, or
 # (at your option) any later version.
 #
 # This program is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License along
 # with this program; if not, write to the Free Software Foundation, Inc.,
 # 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 #
 #><#
/*!
 * \file list.ecpp
 * \author Michal Hrusecky <MichalHrusecky@Eaton.com>
 * \author Alena Chernikava <AlenaChernikava@Eaton.com>
 * \brief Not yet documented file
 */
 #><%pre>
#include "data.h"
#include "log.h"
#include "assetcrud.h"
#include "utils_web.h"
</%pre>
<%args>
std::string subtype;
</%args>
<%thread scope="global">
asset_manager asset_mgr;
</%thread>

<%cpp>
{
    // check if method is allowed
    if ( !request.isMethodGET() )
    {
</%cpp>
<$$ create_error_json("Not allowed", 300) $>
<%cpp>
        return HTTP_METHOD_NOT_ALLOWED;
    }
    log_debug (" type = '%s'", request.getArg("type").c_str());
    log_debug (" subtype = '%s'", subtype.c_str());
    // Get data
    auto allAssetsShort = asset_mgr.get_items1 (request.getArg("type"), subtype);
    if ( allAssetsShort.status == 0 )
    {
</%cpp>
<$$ create_error_json("Assets were not found", 301) $>
<%cpp>
        return HTTP_NOT_FOUND;
    }

    std::string json = "{\"" + request.getArg("type");
    json +=  "s\":[";
    for ( auto &oneAsset : allAssetsShort.item )
    {
        json += "{";
        json += utils::json::jsonify ("id", std::to_string(oneAsset.first));
        json += ",";
        json +=  utils::json::jsonify ("name", oneAsset.second);
        json += "},";
    }
    json.back() = ']';
    json += "}";
</%cpp>
<$$ json $>
%}
