<?xml version="1.0" encoding="UTF-8"?>
<!--
  This is the main configuration file for tntnet.

  You can find documentation about the parameters in the man page tntnet.xml(7)
  -->
<tntnet>
  <mappings>
    <!-- Everything SSL only -->
    <mapping>
      <target>ssl-redirect@bios_web</target>
    </mapping>

    <!-- Serve static files -->
    <mapping>
      <target>static@tntnet</target>
      <pathinfo>./$1</pathinfo>
      <url>^/((assets|[b-z]).*)</url>
    </mapping>
    <mapping>
      <target>static@tntnet</target>
      <pathinfo>./index.html</pathinfo>
      <url>^/$</url>
    </mapping>
    <mapping>
      <target>static@tntnet</target>
      <pathinfo>./favicon.ico</pathinfo>
      <url>^/favicon.ico</url>
    </mapping>
    <mapping>
      <target>static@tntnet</target>
      <pathinfo>/usr/share/common-licenses/Eaton-EULA</pathinfo>
      <url>^/legal/Eaton-EULA</url>
    </mapping>
    <mapping>
      <target>static@tntnet</target>
      <pathinfo>/usr/share/doc/$1</pathinfo>
      <url>^/legal/(.*)$</url>
    </mapping>

    <!-- Make sure everybody speaks json from now on -->
    <mapping>
      <target>json@bios_web</target>
    </mapping>
    <!-- We are getting authorized -->
    <mapping>
      <target>auth@bios_web</target>
      <url>^/api/v1/oauth2/token$</url>
    </mapping>
    <!-- Set (int)access_auth_level variable if the request is authenticated
         and validate rights are sufficient.
      -->
    <mapping>
      <target>auth-verify@bios_web</target>
    </mapping>

    <!-- Here starts the real API -->


    <!-- SysInfo mapping -->
    <!-- Implementation tests (int)access_auth_level variable to limit visibility of some data -->
    <mapping>
      <target>sysinfo@bios_web</target>
      <url>^/api/v1/admin/sysinfo(/?|\?.+=.+)$</url>
    </mapping>

    <!-- Token revocation -->
    <mapping>
      <target>auth@bios_web</target>
      <url>^/api/v1/oauth2/revoke$</url>
      <method>(POST|PUT)</method>
    </mapping>

    <!-- alerts/activelist -->
    <mapping>
        <target>alert_list@bios_web</target>
        <method>GET</method>
        <url>^/api/v1/alerts/activelist(\?[^/]+)?$</url>
    </mapping>

    <!-- alerts/ack -->
    <mapping>
        <target>alert_ack@bios_web</target>
        <method>PUT</method>
        <url>^/api/v1/alerts/ack/([^/]+)/([^/]+)/?$</url>
        <args>
            <rule_name>$1</rule_name>
            <element_name>$2</element_name>
        </args>
    </mapping>

    <!-- alerts/rules -->
    <mapping>
        <target>alert_rules_list@bios_web</target>
        <method>GET</method>
        <url>^/api/v1/alerts/rules([^/]*)$</url>
    </mapping>

    <mapping>
        <target>alert_rules_detail@bios_web</target>
        <method>GET</method>
        <url>^/api/v1/alerts/rules/([^/]*)$</url>
        <args>
            <name>$1</name>
        </args>
    </mapping>

    <mapping>
        <target>alert_rules@bios_web</target>
        <method>(POST|PUT)</method>
        <url>^/api/v1/alerts/rules(/|/([^/]+)){0,1}$</url>
        <args>
            <name>$2</name>
        </args>
    </mapping>

    <!-- admin/systemctl GET -->
    <mapping>
        <target>systemctl@bios_web</target>
        <method>GET</method>
        <url>^/api/v1/admin/systemctl/([^/]+)(/(.*))?$</url>
        <args>
            <operation>$1</operation>
            <!-- ?: non-capture group does not work, so we work around by capturing $3 instead of doing ([^/]+)(?:/(.*))?$-->
            <service_name>$3</service_name>
        </args>
    </mapping>

    <!-- admin/systemctl POST -->
    <mapping>
        <target>systemctl@bios_web</target>
        <method>POST</method>
        <url>^/api/v1/admin/systemctl/(.+?)$</url>
        <args>
            <operation>$1</operation>
        </args>
    </mapping>

    <!-- Network configuration -->
    <mapping>
      <target>augtool@bios_web</target>
      <url>^/api/v1/admin/(netcfg|time).*</url>
    </mapping>
    <mapping>
      <target>netcfg@bios_web</target>
      <url>^/api/v1/admin/netcfgs$</url>
    </mapping>
    <mapping>
      <target>netcfg@bios_web</target>
      <url>^/api/v1/admin/netcfg/(.*)$</url>
      <args>
        <iface>$1</iface>
      </args>
    </mapping>
    <mapping>
      <target>iface@bios_web</target>
      <url>^/api/v1/admin/ifaces$</url>
    </mapping>
    <mapping>
      <target>iface@bios_web</target>
      <url>^/api/v1/admin/iface/(.*)$</url>
      <args>
        <iface>$1</iface>
      </args>
    </mapping>

    <!-- Time settings -->
    <mapping>
      <target>time@bios_web</target>
      <method>(GET|PUT|POST)</method>
      <url>^/api/v1/admin/time.*$</url>
    </mapping>

    <!-- Change password -->
    <mapping>
      <target>admin_passwd@bios_web</target>
      <url>^/api/v1/admin/passwd(/)?</url>
      <method>POST</method>
    </mapping>

    <!-- Asset management -->
    <!-- list of asset by container -->
    <mapping>
      <target>assets_in@bios_web</target>
      <url>^/api/v1/assets$</url>
    </mapping>

    <mapping>
      <target>asset_list@bios_web</target>
      <url>^/api/v1/asset/(datacenter|room|row|rack|group|device)s.*$</url>
      <args>
        <type>$1</type>
      </args>
    </mapping>

    <!-- Asset import -->
    <mapping>
      <target>asset_import@bios_web</target>
      <url>^/api/v1/asset/import.*</url>
    </mapping>

    <!-- Asset export -->
    <mapping>
      <target>asset_export@bios_web</target>
      <method>GET</method>
      <url>^/api/v1/asset/export.*</url>
    </mapping>

    <!--
         Asset GET
         XXX: This needs to be last position as this regexp matches all possible
              asset API, like /asset/import!!!
         -->
    <mapping>
      <target>asset_GET@bios_web</target>
      <url>^/api/v1/asset/?(datacenter|room|row|rack|group|device)?/?(.*)$</url>
      <method>GET</method>
      <args>
        <id>$2</id>
        <type>$1</type>
      </args>
    </mapping>

    <mapping>
      <target>asset_DELETE@bios_web</target>
      <url>^/api/v1/asset/(.*)$</url>
      <method>DELETE</method>
      <args>
        <id>$1</id>
      </args>
    </mapping>

    <mapping>
      <target>asset_PUT@bios_web</target>
      <url>^/api/v1/asset/(.*)$</url>
      <method>PUT</method>
      <args>
        <id>$1</id>
      </args>
    </mapping>

    <mapping>
      <target>asset_POST@bios_web</target>
      <url>^/api/v1/asset/?$</url>
      <method>POST</method>
    </mapping>

    <!-- UI/properties -->
    <mapping>
      <target>ui_properties@bios_web</target>
      <method>(GET|PUT)</method>
      <url>^/api/v1/ui/properties.*$</url>
    </mapping>

    <!-- License management -->
    <mapping>
      <target>license@bios_web</target>
      <url>^/api/v1/.*</url>
    </mapping>

    <!-- API itself -->

    <!-- topology/location -->
    <mapping>
      <target>topology_location_from@bios_web</target>
      <url>^/api/v1/topology/location.*$</url>
      <method>GET</method>
    </mapping>

    <mapping>
      <target>topology_location_to@bios_web</target>
      <url>^/api/v1/topology/location.*$</url>
      <method>GET</method>
    </mapping>

    <!-- topology/power -->
    <mapping>
      <target>topology_power@bios_web</target>
      <url>^/api/v1/topology/power.*$</url>
      <method>GET</method>
    </mapping>

    <!-- Current meassurements -->
    <mapping>
      <target>current@bios_web</target>
      <url>^/api/v1/metric/current.*$</url>
      <method>GET</method>
    </mapping>

    <!-- rack consumption -->
    <mapping>
      <target>rack_total@bios_web</target>
      <method>GET</method>
      <url>^/api/v1/metric/computed/rack_total.*$</url>
    </mapping>

    <!-- datacenter indicators -->
    <mapping>
      <target>datacenter_indicators@bios_web</target>
      <url>^/api/v1/metric/computed/datacenter_indicators.*$</url>
      <method>GET</method>
    </mapping>

    <!-- uptime -->
    <mapping>
      <target>uptime@bios_web</target>
      <url>^/api/v1/metric/computed/uptime.*$</url>
    </mapping>

    <!-- Make sure we have malamute connection -->
    <!-- Currently doesn't work, needs to be debugged
    <mapping>
      <target>agent@bios_web</target>
    </mapping> -->

    <!-- Average GET -->
    <mapping>
      <target>average@bios_web</target>
      <method>GET</method>
      <url>^/api/v1/metric/computed/average.*$</url>
    </mapping>

    <!-- admin/config -->
    <mapping>
        <target>config@bios_web</target>
        <url>^/api/v1/admin/config.*$</url>
    </mapping>

 </mappings>

  <!-- listen to a port (empty string means any local interface) -->
  <listeners>
    <listener>
      <port>8000</port>
    </listener>
  <!-- a certificate enables ssl -->
  <!-- ssl start
    <listener>
      <port>8443</port>
      <certificate>/etc/tntnet/bios.pem</certificate>
    </listener>
   ssl end -->
  </listeners>

  <logging>
    <rootlogger>INFO</rootlogger>

    <loggers>
      <logger>
        <category>tntnet</category>
        <level>INFO</level>
      </logger>
      <logger>
        <category>component.bios_web-web</category>
        <level>INFO</level>
      </logger>
    </loggers>

    <!--
    <file>tntnet.log</file>
    <maxfilesize>10M</maxfilesize>
    <maxbackupindex>2</maxbackupindex>
    -->

  </logging>

  <!-- <maxRequestSize>65536</maxRequestSize> -->
  <!-- <maxRequestTime>600</maxRequestTime> -->
  <!-- <user>tntnet</user> -->
  <!-- <group>tntnet</group> -->
  <!-- <dir>/</dir> -->
  <!-- <documentRoot>/var/www</documentRoot> -->
  <!-- <chrootdir>/var/safedir</chrootdir> -->
  <!-- <pidfile>/var/run/tntnet.pid</pidfile> -->
  <!-- <daemon>0</daemon> -->
  <!-- <minThreads>5</minThreads> -->
  <!-- <maxThreads>100</maxThreads> -->
  <!-- <threadStartDelay>10</threadStartDelay> -->
  <!-- <queueSize>1000</queueSize> -->
  <!--
  <compPath>
    <entry>path1</entry>
    <entry>path2</entry>
  </compPath>
   -->
  <!-- <bufferSize>16384</bufferSize> -->
  <!-- <socketReadTimeout>10</socketReadTimeout> -->
  <!-- <socketWriteTimeout>10000</socketWriteTimeout> -->
  <!-- <keepAliveTimeout>15000</keepAliveTimeout> -->
  <!-- <keepAliveMax>1000</keepAliveMax> -->
  <!-- <sessionTimeout>300</sessionTimeout> -->
  <!-- <listenBacklog>64</listenBacklog> -->
  <!-- <listenRetry>5</listenRetry> -->
  <!-- <enableCompression>no</enableCompression> -->
  <!-- <mimeDb>/etc/mime.types</mimeDb> -->
  <!-- <minCompressSize>1024</minCompressSize> -->
  <!-- <maxUrlMapCache>8192</maxUrlMapCache> -->
  <!-- <defaultContentType>text/html; charset=UTF-8</defaultContentType> -->
  <!-- <accessLog>/var/log/tntnet/access.log</accessLog> -->
  <!-- <errorLog>/var/log/tntnet/error.log</errorLog> -->
  <!-- <maxBackgroundTasks>5</maxBackgroundTasks> -->

</tntnet>
