<class
    name = "nmap_msg"
    signature = "1"
    title = "nmap scan results"
    script = "zproto_codec_c"
    header = "."
    source = "."
    package_dir= "."
    include = "czmq.h"
    >

<!-- this includes our Eaton license into the generated header and source files -->
<include filename = "license.xml" />

<!-- This is here for a purpose. DO CHANGE it if back-compatibility breaking change occurs -->
<define name = "VERSION" value = "1.0" />

<message name = "scan_command" id = "1">
    Command for scanning
    <field name = "type" type = "string">Type of a scan - default list scan, device scan, ...</field>
    <field name = "headers" type = "dictionary">Aditional parameters for scanning, not used right now</field>
    <field name = "args" type = "strings">Arguments for scanning, usually list of ip addresses</field>
</message>

<message name = "list_scan" id = "2">
    Results of a list scan, this parses 'host' element with a limited set of fields, see ELEMENT host in nmap DTD
    <field name = "addr" type = "string">IP address</field>
    <field name = "host_state" type = "number" size= "1"> Status of a host (up|down|unknown|skipped)</field>
    <field name = "reason" type = "string">Reason string (syn-ack, echo-reply, ...), see portreason.cc:reason_map_type</field>
    <field name = "hostnames" type = "dictionary">dictionary of hostname : type, where type is a type of hostname (user, PTR)</field>
</message>

<!--
     Structure of messages, which matches the nmap DTD
     TODO: be more explicit, which fields are optional, or not ...

[dev_scan:
    addr, host_state, reason, addresses, hostnames

    [ports*
        [port_scan:
            protocol, portid, port_state, reason, reason_ttl, reason_ip
            service: port_scan_service
            [scripts*:
             [script: ]
             [script: ]
            ]
        ] #port_scan
    ] #ports*

    [os*:
        [os_scan:
            [portused*:
                [portused]
                [portused]
              ]
            [osmatch*:
                [osmatch]
                [osmatch]
            ]
            [osclass*:
                [osclass]
                [osclass]
            ]
        ] #os_scan
    ] #os*

    [scripts*:
        [script: ]
        [script: ]
    ] # scripts*

] # dev_scan
-->

<!--
<!ELEMENT host		( status, address , (address | hostnames |
                          smurf | ports | os | distance | uptime | 
                          tcpsequence | ipidsequence | tcptssequence |
                          hostscript | trace)*, times? ) >
supported: status, address, hostnames, ports, os, hostscript (see script)
omitted: smurf, distance, uptime, tcpsequence, ipidsequence, tcptssequence, trace, times
-->
<message name = "dev_scan" id = "3">
    Results of a device scan, this parses 'host' element. It is a high-level container, which encapsulates
    port scan results and os scan one (if enabled).
    <field name = "host_state" type = "number" size= "1"> Status of a host (up|down|unknown|skipped)</field>
    <field name = "reason" type = "string">Reason string (syn-ack, echo-reply, ...), see portreason.cc:reason_map_type</field>
    <field name = "addresses" type = "dictionary">dictionary of address : vendor, where vendor is valid only for mac addresses</field>
    <field name = "hostnames" type = "dictionary">dictionary of hostname : type, where type is a type of hostname (user, PTR)</field>
    <field name = "ports" type = "frame" >List of port_scan results. List of 'port_scan' messages</field>
    <field name = "os"    type = "frame" >List of os_scan results. List of 'os_scan' messages</field>
    <field name = "scripts" type = "frame" >List of script results. List of 'script' messages</field>
</message>

<!--
<!ELEMENT ports		(extraports* , port*) >

supported: port*
omitted: extraports*

<!ELEMENT port		(state , owner? , service?, script*) >
<!ATTLIST port
			protocol	%port_protocols;	#REQUIRED
			portid		%attr_numeric;	#REQUIRED
>

supported:  state, service, script
omitted:    owner

<!ELEMENT state		EMPTY >
<!ATTLIST state
		state		%port_states;	#REQUIRED 
		reason		CDATA	#REQUIRED
		reason_ttl	CDATA	#REQUIRED			
        reason_ip	CDATA	#IMPLIED

>
-->


<message name = "port_scan" id = "4">
    Results of a device scan, this parses 'port' + 'port/state' elements. It encapsulates informations
    about service(s) running on port and result of scan scripts if any.
    <field name = "protocol" type = "string">Name of protocol</field>
    <field name = "portid" type = "number" size="2">Port number (1-65535), uint16_t</field>
    <field name = "port_state" type = "number" size="1">Port status (open, filtered, unfiltered, closed, open|filtered, closed|filtered, unknown), see nmap.cc:statenum2str</field>
    <field name = "reason" type = "string">Reason string (syn-ack, echo-reply, ...), see portreason.cc:reason_map_type</field>
    <field name = "reason_ttl" type = "number" size="1">reason_ttl</field>
    <field name = "reason_ip" type = "string">reason_ip (optional)</field>
    <field name = "service" type = "service_scan">Service detected on a port (optional)</field>
    <field name = "scripts" type = "frame" >List of script results. Each frame is nmap_msg_script_t. Encapsulated list of 'script' messages</field>
</message>


<!--
<!ELEMENT service	(cpe*) >
<!ATTLIST service
            name		CDATA		    #REQUIRED
            conf		%service_confs;	#REQUIRED
            method      (table|probed)  #REQUIRED
            version     CDATA           #IMPLIED
            product     CDATA           #IMPLIED
            extrainfo   CDATA           #IMPLIED
            tunnel		(ssl)		    #IMPLIED
            proto		(rpc)		    #IMPLIED
            rpcnum		%attr_numeric;	#IMPLIED
            lowver		%attr_numeric;	#IMPLIED
            highver		%attr_numeric;	#IMPLIED
            hostname    CDATA           #IMPLIED
            ostype      CDATA           #IMPLIED
            devicetype  CDATA           #IMPLIED
            servicefp   CDATA           #IMPLIED            

cpe implemented as newline delimited list of string
>
-->

<type name = "service_scan">
    Service running on a port (see &lt;port ... &lt;service in xml output)
    <field name = "name" type = "string">Name of a service</field>
    <field name = "conf" type = "number" size="1">confidence in result's correcntess (0-10)</field>
    <field name = "method" type = "number" size="1">How nmap got it (table|probed)</field>
    <field name = "version" type = "string">version (optional)</field>
    <field name = "product" type = "string">product (optional)</field>
    <field name = "extrainfo" type = "string">product (optional)</field>
    <field name = "tunnel" type = "number" size="1">tunnel (ssl) (optional)</field>
    <field name = "proto" type = "number" size="1">proto  (rpc) (optional)</field>
    <field name = "rpcnum" type = "number" size="4">rpcnum (optional)</field>
    <field name = "lowver" type = "number" size="4">lowver (optional)</field>
    <field name = "highver" type = "number" size="4">highver (optional)</field>
    <field name = "hostname" type = "string">hostname (optional)</field>
    <field name = "ostype" type = "string">ostype (optional)</field>
    <field name = "devicetype" type = "string">devicetype (optional)</field>
    <field name = "servicefp" type = "string">servicefp (optional)</field>
    <field name = "cpes" type = "strings">List of CPE(optional)</field>
</type>

<message name = "script" id = "6">
    Output of NSE script
    <field name = "script_id" type = "string">Name of a script (like ssh-hostkeys)</field>
    <field name = "data" type = "chunk">Data - raw XML</field>
</message>

<!--
<!ELEMENT os		( portused* , osmatch*, osfingerprint* ) >
-->

<message name = "os_scan" id = "7">
    Operating system scan results (if available)
    <field name = "portused" type = "frame" >List of portused results. Encapsulated list of 'portused' messages.</field>
    <field name = "osmatch" type = "frame" >List of osmatch results. Encapsulated list of 'osmatch' messages</field>
    <field name = "osfingerprints" type = "strings">List of OS fingerprints</field>
</message>

<!--
<!ELEMENT portused	EMPTY >
<!ATTLIST portused
			state 		%port_states;	#REQUIRED
			proto 		%port_protocols; #REQUIRED
			portid 		%attr_numeric;	#REQUIRED
>
-->
<message name = "portused" id = "8">
    Content of element 'os/portused', see nmap dtd ELEMENT portused
    <field name = "port_state" type = "number" size="1">Port status (open, filtered, unfiltered, closed, open|filtered, closed|filtered, unknown), see nmap.cc:statenum2str</field>
    <field name = "proto" type = "string">Protocol name</field>
    <field name = "portid" type = "number" size="2">Port number (1-65535), uint16_t</field>
</message>

<!--
<!ELEMENT os		( portused* , osmatch*, osfingerprint* ) >

<!ELEMENT osmatch	(osclass*) >
<!ATTLIST osmatch
			name		CDATA		#REQUIRED
			accuracy	%attr_numeric;	#REQUIRED
			line    	%attr_numeric;	#REQUIRED
>
-->
<message name = "osmatch" id = "9">
    Content of element 'os/osmatch', see nmap dtd ELEMENT portused
    <field name = "name"     type = "string">OS name</field>
    <field name = "accuracy" type = "number" size="1">Match accuracy, uint16_t</field>
    <field name = "osclass"  type = "frame" >List of osclass results. Encapsulated list of 'osclass' messages</field>
    <field name = "line"     type = "number" size = "4">?</field>
</message>

<!--
<!ELEMENT osclass      (cpe*) >
<!ATTLIST osclass
                       vendor          CDATA           #REQUIRED
                       osgen           CDATA           #IMPLIED
                       type            CDATA           #IMPLIED
                       accuracy        CDATA           #REQUIRED
                       osfamily        CDATA           #REQUIRED
>
-->
<message name = "osclass" id = "10">
    Content of element 'os/osmatch/osclass', see nmap dtd ELEMENT portused
    <field name = "vendor" type = "string">Vendor name</field>
    <field name = "osgen" type = "string">OS generation (optional)</field>
    <field name = "type" type = "string">OS type (optional)</field>
    <field name = "osaccuracy" type = "string">accuracy</field>
    <field name = "osfamily" type = "string">osfamily</field>
    <field name = "cpes" type = "strings">List of CPE</field>
</message>

<!-- TODO common error -->
<!-- TODO return code size 1 -->
<message name = "scan_error" id = "42">
    Nmap fails with an error
    <field name = "return_code" type = "number" size = "2">Return code of a program</field>
    <field name = "args" type = "strings">Program command line</field>
    <field name = "stderr" type = "longstr">Program's standard error output</field>
</message>


</class>
