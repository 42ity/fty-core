<class
    name = "nmap_msg"
    signature = "1"
    title = "nmap scan results"
    script = "zproto_codec_c"
    header = "."
    source = "."
    package_dir= "."
    include = "czmq.h"
    >

<!-- this includes our Eaton license into the generated header and source files -->
<include filename = "license.xml" />

<!-- This is here for a purpose. DO CHANGE it if back-compatibility breaking change occurs -->
<define name = "VERSION" value = "1.0" />

<message name = "scan_command" id = "1">
    Command for scanning
    <field name = "type" type = "string">Type of a scan - default list scan, device scan, ...</field>
    <field name = "headers" type = "dictionary">Aditional parameters for scanning, not used right now</field>
    <field name = "args" type = "strings">Arguments for scanning, usually list of ip addresses</field>
</message>

<message name = "list_scan" id = "2">
    Results of a list scan, this parses 'host' element with a limited set of fields, see ELEMENT host in nmap DTD
    <field name = "addr" type = "string">IP address</field>
    <field name = "state" type = "string">State string (up, down, unknown, ...)</field>
    <field name = "reason" type = "string">Reason string (user-set, ...)</field>
    <field name = "hostnames" type = "dictionary">dictionary of hostname : type, where type is a type of hostname (PTR, hosts, ...)</field>
</message>

<!--
<!ELEMENT host		( status, address , (address | hostnames |
                          smurf | ports | os | distance | uptime | 
                          tcpsequence | ipidsequence | tcptssequence |
                          hostscript | trace)*, times? ) >
supported: status, address, hostnames, ports
omitted: smurf, os, distance, uptime, tcpsequence, ipidsequence, tcptssequence, hostscript, trace, times

to be implemented: hostscript
to be added os
-->
<message name = "dev_scan" id = "3">
    Results of a device scan, this parses 'host' element, see ELEMENT host in nmap DTD
    <field name = "scan_id" type = "number" size="1">number of a scan, uint8_t - this will match the dev_scan with subsequent port_scan and script_scan messages</field>
    <field name = "addr" type = "string">IP address</field>
    <field name = "state" type = "string">Status string (up, down, unknown, ...)</field>
    <field name = "reason" type = "string">Reason string (user-set, arp-response)</field>
    <field name = "addresses" type = "dictionary">dictionary of address : vendor, where vendor is valid only for mac addresses</field>
    <field name = "hostnames" type = "dictionary">dictionary of hostname : type, where type is a type of hostname (PTR, hosts, ...)</field>
</message>

<!--
<!ELEMENT ports		(extraports* , port*) >

supported: port*
omitted: extraports*

<!ELEMENT port		(state , owner? , service?, script*) >
<!ATTLIST port
			protocol	%port_protocols;	#REQUIRED
			portid		%attr_numeric;	#REQUIRED
>

supported:  state, service, script
omitted:    owner
-->


<message name = "port_scan" id = "4">
    Results of a device scan, this parses 'port' element, see ELEMENT port in nmap DTD
    <field name = "scan_id" type = "number" size="1">This is id of matching dev_scan, uint8_t</field>
    <field name = "protocol" type = "string">Name of protocol</field>
    <field name = "portid" type = "number" size="2">Port number (1-65535), uint16_t</field>
</message>


<!--
<!ELEMENT state		EMPTY >
<!ATTLIST state
		state		%port_states;	#REQUIRED 
		reason		CDATA	#REQUIRED
		reason_ttl	CDATA	#REQUIRED			
        reason_ip	CDATA	#IMPLIED

>
-->
<message name = "port_scan_state" id = "5">
    State of port (see &lt;port ... &lt;state in xml output)
    <field name = "scan_id" type = "number" size="1">This is id of matching dev_scan, uint8_t</field>
    <field name = "state" type = "string">State (open, close, filtered) of a port</field>
    <field name = "reason" type = "string">How nmap got the message (syn-ack)</field>
    <field name = "reason_ttl" type = "string">reason_ttl</field>
    <field name = "reason_ip" type = "string">reason_ip (optional)</field>
</message>


<!--
<!ELEMENT service	(cpe*) >
<!ATTLIST service
            name		CDATA		    #REQUIRED
            conf		%service_confs;	#REQUIRED
            method      (table|probed)  #REQUIRED
            version     CDATA           #IMPLIED
            product     CDATA           #IMPLIED
            extrainfo   CDATA           #IMPLIED
            tunnel		(ssl)		    #IMPLIED
            proto		(rpc)		    #IMPLIED
            rpcnum		%attr_numeric;	#IMPLIED
            lowver		%attr_numeric;	#IMPLIED
            highver		%attr_numeric;	#IMPLIED
            hostname    CDATA           #IMPLIED
            ostype      CDATA           #IMPLIED
            devicetype  CDATA           #IMPLIED
            servicefp   CDATA           #IMPLIED

to be implemented cpe
>
-->

<message name = "port_scan_service" id = "6">
    Service running on a port (see &lt;port ... &lt;service in xml output)
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
    <field name = "name" type = "string">Name of a service</field>
    <field name = "conf" type = "number" size="1">confidence in result's correcntess (0-10)</field>
    <field name = "method" type = "string">How nmap got it (table|probed)</field>
    <field name = "version" type = "string">version (optional)</field>
    <field name = "product" type = "string">product (optional)</field>
    <field name = "extrainfo" type = "string">product (optional)</field>
    <field name = "tunnel" type = "string">tunnel (optional)</field>
    <field name = "proto" type = "string">proto (optional)</field>
    <field name = "rpcnum" type = "number" size="4">rpcnum (optional)</field>
    <field name = "lowver" type = "number" size="4">lowver (optional)</field>
    <field name = "highver" type = "number" size="4">highver (optional)</field>
    <field name = "hostname" type = "string">hostname (optional)</field>
    <field name = "ostype" type = "string">ostype (optional)</field>
    <field name = "devicetype" type = "string">devicetype (optional)</field>
    <field name = "servicefp" type = "string">servicefp (optional)</field>
    <field name = "cpe" type = "string">cpe (optional)</field>
</message>

<message name = "port_scan_script" id = "7">
    Output of NSE script
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
    <field name = "script_id" type = "string">Name of a script (like ssh-hostkeys)</field>
    <field name = "table" type = "chunk">Data - probably raw XML ...</field>
</message>

<message name = "dev_scan_end" id = "8">
    Last message for this scan_id, all remaining messages with the same scan_id can be discarded
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
</message>

<!--
<!ELEMENT os		( portused* , osmatch*, osfingerprint* ) >

<!ELEMENT portused	EMPTY >
<!ATTLIST portused
			state 		%port_states;	#REQUIRED
			proto 		%port_protocols; #REQUIRED
			portid 		%attr_numeric;	#REQUIRED
>
-->
<message name = "dev_scan_portused" id = "9">
    Content of element 'os/portused', see nmap dtd ELEMENT portused
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
    <field name = "state" type = "string">State of port</field>
    <field name = "proto" type = "string">Protocol name</field>
    <field name = "portid" type = "number" size="2">Port number (1-65535), uint16_t</field>
    <field name = "osfingerprints" type = "strings">List of OS fingerprints</field>
</message>

<!--
<!ELEMENT os		( portused* , osmatch*, osfingerprint* ) >

<!ELEMENT osmatch	(osclass*) >
<!ATTLIST osmatch
			name		CDATA		#REQUIRED
			accuracy	%attr_numeric;	#REQUIRED
			line    	%attr_numeric;	#REQUIRED
>
-->
<message name = "dev_scan_osmatch" id = "10">
    Content of element 'os/osmatch', see nmap dtd ELEMENT portused
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
    <field name = "name" type = "string">OS name</field>
    <field name = "accuracy" type = "number" size="1">Match accuracy, uint16_t</field>
</message>

<!--
<!ELEMENT osclass      (cpe*) >
<!ATTLIST osclass
                       vendor          CDATA           #REQUIRED
                       osgen           CDATA           #IMPLIED
                       type            CDATA           #IMPLIED
                       accuracy        CDATA           #REQUIRED
                       osfamily        CDATA           #REQUIRED
>
-->
<message name = "dev_scan_osclass" id = "11">
    Content of element 'os/osmatch/osclass', see nmap dtd ELEMENT portused
    <field name = "scan_id" type = "number" size="1">Id of matching dev_scan scan, uint8_t</field>
    <field name = "vendor" type = "string">Vendor name</field>
    <field name = "osgen" type = "string">OS generation (optional)</field>
    <field name = "type" type = "string">OS type (optional)</field>
    <field name = "osaccuracy" type = "string">accuracy</field>
    <field name = "osfamily" type = "string">osfamily</field>
    <field name = "cpes" type = "strings">List of CPE</field>
</message>

<message name = "scan_error" id = "42">
    Nmap fails with an error
    <field name = "return_code" type = "number" size = "2">Return code of a program</field>
    <field name = "args" type = "strings">Program command line</field>
    <field name = "stderr" type = "longstr">Program's standard error output</field>
</message>


</class>
