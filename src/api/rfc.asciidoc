This RFC describes communication protocols that are used by ALERT component

Parts involved in communication
-------------------------------
* Component METRIC_DRIVER is any component that publishes METRIC messages into METRICS stream. In the system there CAN be many of such components.
* Component ALERT is a component publishes ALERT messages into ALERTS stream as a result of evaluation of metric in the system. In the system there MUST be only one such component.
* Component GATEWAY is a component that sends information about alerts in the system to external services. In the system there CAN be many of them.

Component ALERT
---------------
    * inputs:
        ** different metrics from METRICS stream
        ** rules for evaluation as RULES message to MAILBOX
    * outputs:
        ** current ongoing evaluated alerts into ALERTS stream
        ** resolved alerts into ALERTS stream

METRICS stream
==============
Messages
--------
    * METRIC message ( indicates, that METRIC_DRIVER component has measured some metrics and wants to share this information with other components in the system )

METRIC message
~~~~~~~~~~~~~~
A METRIC message is a multipart message that MUST contain the following fields in that exact order
    * type          - string ( e.g. "realpower.default", "output.voltage" )
    * element_src   - string ( e.g. "datacenter_roztoky", "ups-1-lab" )
    * value         - string ( value of the metric. It can be a floating point number or any string )
    * units         - string ( e.g. "%","W", "kW","" )
    * time [opt]    - number ( unix_timestamp in UTC timezone. If it is missing, then it is current time )
    * element_dest [opt] - string ( e.g. "datacenter_roztoky", "ups-1-lab". Supposed to be used for data about links. )

METRIC message MUST be sent with the subject "type@element_src" into the METRICS stream (see proto.h `metric_send`).

ALERTS stream
=============
Messages
--------
    * ALERT message ( indicates, that ALERT component has evaluated that in the system there is some alert and wants to share this information with other components in the system )

ALERT message
~~~~~~~~~~~~~
ALERT message is a multipart message that MUST contain the following fields in that exact order:
    * rule_name    - string ( a rule name, that trigger this alert to be generated )
    * element_name - string ( name of the element, where alert was detected. Most of the time is would be asset element name )
    * state        - string ( state of the alert. Possible values are ACTIVE/ACK-WIP/ACK-IGNORE/ACK-PAUSE/RESOLVED )
    * severity     - string ( severity of the alert. Possible values are INFO/WARNING/CRITICAL )

ALERT message MUST be sent with the subject "rule_name/severity@element_name" (see proto.h `alert_send`)

Protocol ALERT + METRIC_DRIVER on the METRICS stream
====================================================
    * METRIC_DRIVER compoment publishes METRIC messages into METRICS stream as often as it is needed.
    * ALERT component is subscribed on METRIC messages in the METRICS stream. And starts evaluation every time new metric received.
      Other messages from METRICS stream MUST be ignored by ALERT component.

Protocol ALERT + GATEWAY on the ALERTS stream
=============================================
    * ALERT component publishes ALERT messages into the ALERTS stream after each evaluation.
    * GATEWAY component is subscribed on ALERT messages in the ALERTS stream.
      Other messages from ALERTS stream MUST be ignored by GATEWAY component.
