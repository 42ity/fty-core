# Main integration logic for rsyslog with journald for 42ity project
#
# This configuration file has basic support for remote-logging to a host
# named "loghost", resolvable in either the default DNS domain or local
# /etc/hosts file, using the classic unprotected 514/UDP syslog protocol.
# This preset logging can be enabled by defining certain variable values:
# * To send the same subset of log entries (while not everything aka *.*)
#   to the remote syslog server, set the "$.use_remote_logsink" = "<subset>"
#   variable in another config file (with higher alphabetic priority,
#   such as the "08-ipc-remote.conf", or even in /etc/rsyslog.d-early), e.g.
#       set $.use_remote_logsink = "ipc-audit";
# * The 'ipc-audit' intentionally does not replicate the "snoopy" messages
#   as it is rather noisy and low-level information. You can explicitly use
#   the 'ipc-audit+snoopy' value to get really the same filter contents.
# * To send everything (*.*) to the remote loghost, set this value to "all".
# ** Note that if you use the Linux netconsole, the integration scripts in
#    your OS image may dynamically rewrite "loghost" mapping in /etc/hosts.
#
# To set up more complicated remote logging scenarios (e.g. with gTLS)
# see suggestions in 08-ipc-remote.conf and the rsyslog documentation.
# Mind the rsyslog package version in your OS image - the project is under
# quite active development and supported syntax varies greatly.

# General keyword and structure docs
# http://www.rsyslog.com/doc/master/configuration/basic_structure.html
# http://www.rsyslog.com/doc/master/configuration/filters.html
# http://www.rsyslog.com/doc/master/rainerscript/control_structures.html
# http://www.rsyslog.com/tag/if-then/
# http://www.rsyslog.com/filter-optimization-with-arrays/

# Log rotation (via outchannel keyword)
# http://www.rsyslog.com/doc/v8-stable/tutorials/log_rotation_fix_size.html

# Log system auth stuff and (below) other important messages here:
$outchannel log_rotation_messages,/var/log/messages, 10485760,@datadir@/@PACKAGE@/scripts/logrotate-rsyslog /var/log/messages
# Log many exec() commands caught by libsnoopy here:
$outchannel log_rotation_commands,/var/log/commands.log, 10485760,@datadir@/@PACKAGE@/scripts/logrotate-rsyslog /var/log/commands.log
# Log messages from biostimer-verify-fs into an additional file, beside common messages:
$outchannel log_rotation_verifyfs,/var/log/verify-fs.log, 10485760,/usr/share/bios/scripts/logrotate-rsyslog /var/log/verify-fs.log

# Systemd integration
#	https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/s1-interaction_of_rsyslog_and_journal.html
#	https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/s1-structured_logging_with_rsyslog.html
# Note: imxsock may log a warning if already enabled by another config file
# upon service startup (e.g. by default cfg in debian) - this is harmless.
$ModLoad imuxsock
$OmitLocalLogging off
$SystemLogSocketName /run/systemd/journal/syslog

# see https://en.wikipedia.org/wiki/Syslog#Facility for facilities (RFC-3164)
#
# we log the following facilities:
# (0)kern.*,(4)auth.*,(5)syslog.*,(10)authpriv.*,(13)logaudit.*,(14)logalert.*
# + tntnet messages if they contain PUT/POST/DELETE
# into /var/log/messages
#
# snoopy logging is quite verbose, so we store it separately
# also we do not let snoopy spam with our interactive bash-session syslogger
# NOTE that it can supposedly be configured with an /etc/snoopy.ini (but we did not look at that yet)
# https://github.com/a2o/snoopy/blob/master/etc/snoopy.ini.in

### Note: This template line MUST be followed by an implementation (auto-edit)
#if ($.use_remote_logsink == 'all') then @LOGSINK@
if ($.use_remote_logsink == 'all') then @loghost:514

if ($programname == 'snoopy') then
{
    if ($msg contains [ 'whoami', 'logger' ] ) then stop else {
        :omfile:$log_rotation_commands
### Note: This template line MUST be followed by an implementation (auto-edit)
#        if ($.use_remote_logsink == 'ipc-audit+snoopy') then @LOGSINK@
        if ($.use_remote_logsink == 'ipc-audit+snoopy') then @loghost:514
        stop
    }
} else {
    if ($syslogfacility-text == [ 'kern', 'auth', 'syslog', 'authpriv', 'logaudit', 'logalert', 'security' ] )
    or ($programname == 'tntnet' and $msg contains [ 'PUT', 'POST', 'DELETE' ])
    then {
        :omfile:$log_rotation_messages
        if ($programname == 'verify-fs') then :omfile:$log_rotation_verifyfs
### Note: This template line MUST be followed by an implementation (auto-edit)
#        if ($.use_remote_logsink == [ 'ipc-audit', 'ipc-audit+snoopy' ] ) then @LOGSINK@
        if ($.use_remote_logsink == [ 'ipc-audit', 'ipc-audit+snoopy' ] ) then @loghost:514
        stop
    }
}

# Log BASH interactive session commands along with other messages
# (logging mechanism and facility are predefined via profile.d):
if ($syslogfacility-text == 'local6' and $syslogseverity-text == 'debug') then {
    :omfile:$log_rotation_messages
### Note: This template line MUST be followed by an implementation (auto-edit)
#    if ($.use_remote_logsink == [ 'ipc-audit', 'ipc-audit+snoopy' ] ) then @LOGSINK@
    if ($.use_remote_logsink == [ 'ipc-audit', 'ipc-audit+snoopy' ] ) then @loghost:514
}
