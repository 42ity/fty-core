# WARNING: This unit is intended for systems or containers dedicated as
# 42ity execution environments. It disables any existing MySQL server.

[Unit]
Description=MySQL server for 42ity usage
Conflicts=mysql.service mysqld.service mariadb.service
Wants=basic.target network.target
Requires=fty-license-accepted.service
BindsTo=fty-license-accepted.service
After=basic.target network.target fty-license-accepted.service
PartOf=bios.target

[Service]
Type=forking
Restart=always
# Note: explicit User=root is required for $HOME to get set and ~/.my.cnf
# to get used by ExecStartPost self-check below
User=root
# Note: time below must suffice for units that require database to
# have stopped before this service restarts, otherwise we get a
# "failed to schedule restart job: Transaction is destructive" !
RestartSec=5
# Unlimited startup...
TimeoutStartSec=0
# More than 90, less than in bios.service
TimeoutStopSec=100
ExecStartPre=/bin/dash -c "for S in mysql.service mysqld.service mariadb.service ; do for A in stop disable mask ; do /bin/systemctl $A $S || true ; done; done"
# Hack to work around systemd deficiencies, where fty-license-accepted.path+service are not enough
# Better ugly than sorry (with DB beginning to start, then getting killed by newly realized dependency unit states, and ending up with corrupted DB files rarely)
ExecStartPre=/bin/test -f /var/lib/fty/license
ExecStartPre=/bin/dash -c "if [ -d /var/lib/mysql ] ; then /bin/chown -R mysql:mysql /var/lib/mysql ; fi"
ExecStart=/usr/lib/mysql/rcmysql start
ExecStartPost=/bin/dash -c "/usr/bin/mysql -e 'show databases;' || /usr/bin/mysql --password='' -e 'show databases;' || { sleep 30 ; /usr/bin/mysql -e 'show databases;' || /usr/bin/mysql --password='' -e 'show databases;' ; }"
ExecStop=/usr/lib/mysql/rcmysql stop
ExecStopPost=-/bin/rm -f /var/run/fty-db-ready
# Make sure dependent services have finished, e.g. if mysqld died ungracefully
ExecStopPost=/bin/dash -c "/bin/systemctl stop -- $(/bin/systemctl show -p WantedBy -p RequiredBy -p BoundTo fty-db-engine.service | cut -d= -f2 | tr ' ' '\\n' | egrep -v '^(bios|fty)\.(service|target)$')"

[Install]
WantedBy=bios.target
